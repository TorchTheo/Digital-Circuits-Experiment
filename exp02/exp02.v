
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module exp02(

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// Seg7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5
);



//=======================================================
//  REG/WIRE declarations
//=======================================================

reg [2:0] O;
reg valid;
integer i;
bcd7seg b({valid,O}, HEX0);

always @ (SW) begin
	O = 0;
	for(i = 0; i <= 7; i = i + 1)
		if(SW[i] == 1)
			O = i;
	valid = |SW;
end

assign LEDR[2:0] = O;
assign LEDR[3] = valid;
assign LEDR[9:4] = 0;
assign HEX1 = 7'b1111111;
assign HEX2 = 7'b1111111;
assign HEX3 = 7'b1111111;
assign HEX4 = 7'b1111111;
assign HEX5 = 7'b1111111;

//=======================================================
//  Structural coding
//=======================================================



endmodule

module bcd7seg(
	 input  [3:0] b,
	 output reg [6:0] h
	 );

   //add your code here
    always @(*) begin
		if(b[3] == 0)
			h = 7'b1111111;
		else begin
			case(b[2:0])
				0 : h = 7'b1000000;
				1 : h = 7'b1111001;
				2 : h = 7'b0100100;
				3 : h = 7'b0110000;
				4 : h = 7'b0011001;
				5 : h = 7'b0010010;
				6 : h = 7'b0000010;
				7 : h = 7'b1111000;
				default : h = 7'b1111111;
				
			endcase 
		end
    end
	 
endmodule
